[{"/home/raisa/carrinho-compras/src/index.tsx":"1","/home/raisa/carrinho-compras/src/reportWebVitals.ts":"2","/home/raisa/carrinho-compras/src/App.tsx":"3","/home/raisa/carrinho-compras/src/styles/global.ts":"4","/home/raisa/carrinho-compras/src/routes.tsx":"5","/home/raisa/carrinho-compras/src/hooks/useCart.tsx":"6","/home/raisa/carrinho-compras/src/components/Header/index.tsx":"7","/home/raisa/carrinho-compras/src/services/api.ts":"8","/home/raisa/carrinho-compras/src/components/Header/styles.ts":"9","/home/raisa/carrinho-compras/src/pages/Home/index.tsx":"10","/home/raisa/carrinho-compras/src/pages/Cart/index.tsx":"11","/home/raisa/carrinho-compras/src/pages/Home/styles.ts":"12","/home/raisa/carrinho-compras/src/pages/Cart/styles.ts":"13","/home/raisa/carrinho-compras/src/util/format.ts":"14"},{"size":478,"mtime":1648666309623,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1648666309623,"results":"17","hashOfConfig":"16"},{"size":557,"mtime":1648666309619,"results":"18","hashOfConfig":"16"},{"size":590,"mtime":1648666309623,"results":"19","hashOfConfig":"16"},{"size":318,"mtime":1648666309623,"results":"20","hashOfConfig":"16"},{"size":4121,"mtime":1649361356496,"results":"21","hashOfConfig":"16"},{"size":803,"mtime":1649361359668,"results":"22","hashOfConfig":"16"},{"size":102,"mtime":1648666309623,"results":"23","hashOfConfig":"16"},{"size":583,"mtime":1648666309623,"results":"24","hashOfConfig":"16"},{"size":1820,"mtime":1649361352956,"results":"25","hashOfConfig":"16"},{"size":3346,"mtime":1649354277002,"results":"26","hashOfConfig":"16"},{"size":1208,"mtime":1648666309623,"results":"27","hashOfConfig":"16"},{"size":1719,"mtime":1648666309623,"results":"28","hashOfConfig":"16"},{"size":116,"mtime":1648666309623,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"78shco",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/raisa/carrinho-compras/src/index.tsx",[],["60","61"],"/home/raisa/carrinho-compras/src/reportWebVitals.ts",[],"/home/raisa/carrinho-compras/src/App.tsx",[],"/home/raisa/carrinho-compras/src/styles/global.ts",[],"/home/raisa/carrinho-compras/src/routes.tsx",[],"/home/raisa/carrinho-compras/src/hooks/useCart.tsx",["62","63","64"],"import { createContext, ReactNode, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { ProductList } from '../pages/Home/styles';\nimport { api } from '../services/api';\nimport { Product, Stock } from '../types';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n    const storagedCart = localStorage.getItem('@RocketShoes:cart')\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const addProduct = async (productId: number) => {\n    try {\n        const productAlreadyInCart = cart.find(product => product.id == productId);\n\n        if(!productAlreadyInCart){\n          const {data: product} = await api.get<Product>(`products/${productId}`)\n          const {data: stock} = await api.get<Stock>(`stock/${productId}`)\n\n          if(stock.amount > 0){\n            setCart([...cart, {...product, amount:1}])\n            localStorage.setItem('@RocketShoes:cart',JSON.stringify([...cart,{...product, amount:1}]))\n            return;\n          }else{\n            toast.error('Quantidade solicitada fora de estoque')\n            return;\n          }\n        }\n\n        if(productAlreadyInCart){\n          const {data:stock} = await api.get(`stock/${productId}`)\n\n          if(stock.amount <= productAlreadyInCart.amount){\n            toast.error('Quantidade solicitada fora de estoque')\n            return;\n          }\n\n          const updateCart = cart.map(cartItem => cartItem.id === productId ? {\n            ...cartItem,\n            amount: Number(cartItem.amount) + 1\n          } : cartItem)\n\n          setCart(updateCart)\n          localStorage.setItem('@RocketShoes:cart', JSON.stringify(updateCart))\n          \n          return;\n\n        }\n\n\n      // const data = await api.get(`products/${productId}`)      \n      // setCart([...cart,data.data]);\n      \n    } catch {\n\n      toast.error('Erro na adição do produto')\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n     const productExists = cart.some(cartProduct => cartProduct.id === productId);\n     if(!productExists){\n       toast.error('Erro na remoção do produto')\n       return\n     }\n\n     const updatedCart = cart.filter(cartItem => cartItem.id !== productId)\n     setCart(updatedCart)\n     localStorage.setItem('@RocketShoes:cart',JSON.stringify(updatedCart))\n    } catch {\n      toast.error('Erro na remoção do produto')\n    }\n  };\n\n  // const updatedAmountCartProduct = cart.map(product => {\n  //   return product.id === productId \n  //     ? {...product, amount: productAmount + 1 } \n  //     : product;\n  // });\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if(amount < 1){\n        toast.error('Erro na alteração de quantidade do produto')\n        return\n      }\n      \n      const response = await api.get(`/stock/${productId}`)\n      const productAmount = response.data.amount \n      const stockIsNotAvailable = productAmount <= amount\n\n      if(stockIsNotAvailable){\n        toast.error('Quantidade solicitada fora de estoque')\n        return\n      }\n      const productExists = cart.some(cartProduct => cartProduct.id === productId);\n      if(!productExists){\n       toast.error('Erro na alteração de quantidade do produto')\n       return\n     }\n\n     const updatedCart = cart.map(cartItem => cartItem.id === productId ? {\n       ...cartItem,\n       amount: amount\n     }: cartItem)\n     setCart(updatedCart)\n     localStorage.setItem('@RocketShoes:cart',JSON.stringify(updatedCart))\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto')\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n","/home/raisa/carrinho-compras/src/components/Header/index.tsx",[],"/home/raisa/carrinho-compras/src/services/api.ts",[],"/home/raisa/carrinho-compras/src/components/Header/styles.ts",[],"/home/raisa/carrinho-compras/src/pages/Home/index.tsx",[],"/home/raisa/carrinho-compras/src/pages/Cart/index.tsx",[],"/home/raisa/carrinho-compras/src/pages/Home/styles.ts",[],"/home/raisa/carrinho-compras/src/pages/Cart/styles.ts",[],"/home/raisa/carrinho-compras/src/util/format.ts",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":58,"nodeType":"71","messageId":"72","endLine":1,"endColumn":67},{"ruleId":"69","severity":1,"message":"73","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":38,"column":70,"nodeType":"76","messageId":"77","endLine":38,"endColumn":72},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ProductList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]